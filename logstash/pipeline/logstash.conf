#filebeat 사용 선언 및 수신할 IP와 포트 지정
input {
	beats {
		port => 5044
    tags => "filebeat-nginx" 
	}
	http {
		port => 5011
		codec => "line"
	}
	udp {
		port => 5012
		codec => "json"
	}
	tcp {
		port => 5013
		codec => "json_lines"
	}
}

## Add your filters / logstash plugins configuration here
# grok 형식으로 들어오는 로그를 가공하기 위해 필터 사용
# 메시지 필드를 공용 Nginx 로그로 변환하고 접속지의 IP를 기반으로 정보 가공 내용 추가하기
# filter {
#  grok {
#    match => [ "message" , "%{COMBINEDAPACHELOG}+%{GREEDYDATA:extra_fields}"]
#    overwrite => [ "message" ]
#  }
#  mutate {
#    convert => ["response", "integer"]
#    convert => ["bytes", "integer"]
#    convert => ["responsetime", "float"]
#  }
#  geoip {
#    source => "clientip"
#    target => "geoip"
#    add_tag => [ "nginx-geoip" ]
#  }
#  date {
#    match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
#    remove_field => [ "timestamp" ]
#  }
#  useragent {
#    source => "agent"
#  }
# }
filter {
  if "filebeat-nginx" in [tags] {
    mutate {
      add_field => { "[fileset][module]" => "nginx" }
    }

    # if [appname] in ["nginx-access","nginx-ws-access"] {
      grok {
        match => {
          # 'message' => '%{IPORHOST:[nginx][access][remote_ip]} (?:%{IPORHOST:[nginx][access][x_forwarded_for]}|-) \[%{HTTPDATE:timestamp_nginx_access}\] %{NUMBER:[nginx][access][response_code]} (?:%{IPORHOST:[nginx][access][upstream_addr]}:%{NUMBER:[nginx][access][port]:int}|-) (?:%{NUMBER:[nginx][access][upstream_time]:float}|-) %{NUMBER:[nginx][access][msec]:float} (?:%{NUMBER:[nginx][access][request_time]:float}|-) "%{WORD:[nginx][access][method]} %{URIPATHPARAM:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}" (?:%{NUMBER:[nginx][access][body_sent][bytes]:int}|-) (?:"(?:%{URI:[nginx][access][referrer]}|-)"|%{QS:[nginx][access][referrer]}) %{QS:[nginx][access][agent]}'
          'message' => '%{IPORHOST:[nginx][access][remote_ip]} (?:-|(%{WORD}.%{WORD})) %{USER:ident} \[%{HTTPDATE:access_time}\] \"%{WORD:[nginx][access][method]} %{DATA:url} HTTP/%{NUMBER:[nginx][access][http_version]}\" %{NUMBER:[nginx][access][response_code]} %{NUMBER:[nginx][access][body_sent][bytes]} \"%{DATA:[nginx][access][referrer]}\" \"%{DATA:[nginx][access][agent]}\" "%{DATA:[nginx][access][forwarder]}"'
        }
      remove_field => 'message'
      }
      useragent {
        source => "[nginx][access][agent]"
        target => "[nginx][access][user_agent]"
        remove_field => "[nginx][access][agent]"
      }
      geoip {
        source => "[nginx][access][remote_ip]"
        target => "[nginx][access][geoip]"
      }
      mutate {
        add_field => { "[fileset][name]" => "access" }
        }
    # } 
    # else if[appname] in ["nginx-error","nginx-ws-error"] {
    #   grok {
    #     match => {
    #       'message' => ['(?<timestamp>%{YEAR}[./]%{MONTHNUM}[./]%{MONTHDAY} %{TIME}) \[%{LOGLEVEL:[nginx][error][level]}\] %{POSINT:[nginx][error][pid]}#%{NUMBER:[nginx][error][tid]}\: \*%{NUMBER:[nginx][error][connection_id]} %{GREEDYDATA:[nginx][error][message]}, client: %{IP:[nginx][access][remote_ip]}, server: %{GREEDYDATA:server}, request: %{GREEDYDATA:request}'
    #       ,
    #       '(?<timestamp>%{YEAR}[./]%{MONTHNUM}[./]%{MONTHDAY} %{TIME}) \[%{LOGLEVEL:[nginx][error][level]}\] %{POSINT:[nginx][error][pid]}#%{NUMBER:[nginx][error][tid]}\: %{GREEDYDATA:[nginx][error][message]}'
    #       ]
    #     }
    #     remove_field => 'message'
    #   }
    #   geoip {
    #     source => "[nginx][access][remote_ip]"
    #     target => "[nginx][access][geoip]"
    #   }
    #   mutate {
    #     add_field => { "[fileset][name]" => "error" }
    #   }				
    # }
  }
}


# Logstash의 가공한 정보를 어디에 출력할지 설정
# 모든 데이터를 logstash-%{+YYYY.MM.dd}라는 이름의 인덱스를 만들어서 Elasticsearch로 보내도록 설정
output {
  if "filebeat-nginx" in [tags] {
    elasticsearch { 
      hosts => ["https://odfe-node1:9200"] 
      # hosts => ["https://172.27.42.57:9200"] 
      ssl => true
      ssl_certificate_verification => false
      user => admin
      password => admin
      ilm_enabled => false
      index => "filebeat-%{+YYYY.MM.dd}"
    }
    stdout { 
    } 
  }
}
# output {
# 	elasticsearch {
# 		hosts => ["localhost:9200"]
# 		# hosts => "odfe-node1:9200"
# 		# hosts => ["https://odfe-node1:9200"] 
#     	ssl => false
#     	ssl_certificate_verification => false
# 		user => "admin"
# 		password => "admin"
# 		ilm_enabled => false
# 		# ecs_compatibility => disabled
# 		index => "logstash-%{+YYYY.MM.dd}"
# 	}
# }
